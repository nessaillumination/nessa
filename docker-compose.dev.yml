version: '3.9'

services:
  mongo:
    container_name: mongo_container
    image: 'mongo'
    volumes:
      - mongo-data:/data/db
    networks:
      - queue-net
    env_file: 
      - ./.env.development
    command: mongod --bind_ip_all
    restart: always
    ports:
      - "27017:27017"

  client:
    container_name: client
    build:
      context: ./client
      dockerfile: docker/development/Dockerfile
    ports:
      - '5173:5173'
    restart: always
    env_file: 
      - ./.env.development
    volumes:
      - ./client/src:/usr/src/app/src
      - ./client/package.json:/usr/src/app/package.json
    depends_on:
      - server
    networks:
      - queue-net

  server:
    container_name: server
    build:
      context: ./server
      dockerfile: docker/development/Dockerfile
    ports:
      - '5000:5000'
    depends_on:
      - mongo
    env_file: 
      - ./.env.development
    volumes:
      - ./server/src:/usr/src/app/src
      - ./server/package.json:/usr/src/app/package.json
      - ./server/nodemon.json:/usr/src/app/nodemon.json
      - ./server/public:/usr/src/app/public
      - ./.env.development:/usr/src/app/.env.development
    networks:
      - queue-net

  admin:
    container_name: admin
    build:
      context: ./admin
      dockerfile: docker/development/Dockerfile
    ports:
      - '8000:8000'
    restart: always
    env_file: 
      - ./.env.development
    volumes:
      - ./admin/src:/usr/src/app/src
      - ./admin/package.json:/usr/src/app/package.json
    depends_on:
      - server
    networks:
      - queue-net

networks:
  queue-net:
    driver: bridge

volumes:
  mongo-data: